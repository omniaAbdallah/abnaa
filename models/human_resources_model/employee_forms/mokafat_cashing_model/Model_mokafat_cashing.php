<?phpclass Model_mokafat_cashing extends CI_Model{    public function __construct()    {        parent:: __construct();        $this->main_table = "family_mahaders";    } //finance_sarf_order    public function chek_Null($post_value)    {        if ($post_value == '' || $post_value == null || (!isset($post_value))) {            $val = '';            return $val;        } else {            return $post_value;        }    }    public function get_approved_banks($arr)    {        $this->db->select('bank_employes_details.*,banks_settings.id,banks_settings.bank_code,banks_settings.ar_name as bank_name');        $this->db->from('bank_employes_details');        $this->db->where($arr);        $this->db->where('approved_for_sarf', 1);        $this->db->join('banks_settings', 'banks_settings.id=bank_employes_details.bank_id_fk', 'left');        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->row();        } else {            return false;        }    }    public function get_EmployeeData($arr)    {        $this->db->select('employee,emp_code,card_num');        $this->db->from('employees');        $this->db->where($arr);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->row();        } else {            return false;        }    }    public function get_mokafat_type(){        $this->db->select('*');        $this->db->from('hr_mokafat_types');        $this->db->order_by('id','asc');        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->result();        } else {            return false;        }    }    public function SelectEmployeeDataByarr($arr)    {        $this->db->select('*');        $this->db->from('employees');        if ($arr != ' ') {            $this->db->where($arr);        }        $this->db->order_by('emp_code') ;        $query = $this->db->get();        if ($query->num_rows() > 0) {            $x = 0;            foreach ($query->result() as $row) {                $data[$x] = $row;                $data[$x]->nationality = $this->get_from_employee_setting($row->nationality);                $data[$x]->banks = $this->get_approved_banks(array('emp_code'=>$row->id));                $x++;            }            return $data;        } else {            return false;        }    }    public function get_from_employee_setting($id)    {        $this->db->select('title_setting');        $this->db->from('employees_settings');        $this->db->where('id_setting',$id);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->row()->title_setting;        }else{            return 0;        }    }    public function check_emp($emp_code)    {        $this->db->select('emp_code');        $this->db->from("employees");        $this->db->where("emp_code", $emp_code);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->num_rows();        } else {            return 0;        }    }    public function select_last_value_fild()    {        $this->db->select('mokafa_rkm');        $this->db->from('hr_mokafat');        $this->db->order_by("mokafa_rkm", "DESC");        $this->db->limit(1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            foreach ($query->result() as $row) {                $data = $row->mokafa_rkm;            }            return $data;        }        return 0;    }    //==========================================  /*  public function insert($file)    {        $data['sarf_num'] = $this->input->post('sarf_num');        $data['mon_melady'] = $this->input->post('mon_melady');        $data['sarf_date'] = strtotime($this->input->post('sarf_date'));        $data['sarf_date_ar'] = $this->input->post('sarf_date');        $data['month'] = date('m',$data['sarf_date']);        $data['year'] = date('Y',$data['sarf_date']);        $data['type_sarf'] = $this->input->post('sarf_type');        $data['type_family'] = $this->input->post('member_type');        $data['total_value'] = $this->input->post('total_value');        $data['about'] = $this->chek_Null($this->input->post('about'));        $data['presence_number'] = $this->chek_Null(count($this->input->post('value')));        $data['publisher'] = $_SESSION["user_id"];        $this->db->insert('hr_mokafat', $data);    }*/ public function insert()    {        //$data['mokafa_rkm'] = $this->input->post('mokafa_rkm');		 $data['mokafa_rkm'] = $this->select_last_value_fild()+1;		        $data['mon_melady'] = $this->input->post('mon_melady');        $data['mokafa_date'] = strtotime($this->input->post('mokafa_date'));        $data['mokafa_date_ar'] = $this->input->post('mokafa_date');        $data['month'] = date('m',$data['mokafa_date']);        $data['year'] = date('Y',$data['mokafa_date']);        $mokafa_value_type=0;        $data['mokafa_value_type'] = $mokafa_value_type;        //$data['mokafa_value_type'] = $this->input->post('mokafa_value_type');        $data['mokafa_type'] = $this->input->post('mokafa_type');        $data['total_value'] = $this->input->post('total_value');        $data['about'] = $this->chek_Null($this->input->post('about'));        $data['presence_number'] = $this->chek_Null(count($this->input->post('value')));        $data['publisher'] = $_SESSION["user_id"];        $this->db->insert('hr_mokafat', $data);        $this->insert_details($data['mokafa_rkm']);    }    public function UPDATE_mokafa($mokafa_rkm){        if(!empty($mokafa_rkm)) {            $this->db->where('mokafa_rkm', $mokafa_rkm);            $this->db->delete('hr_mokafat');            $this->db->where('mokafa_rkm_fk', $mokafa_rkm);            $this->db->delete('hr_mokafat_details');        }        $data['mokafa_rkm'] = $mokafa_rkm;        $data['mon_melady'] = $this->input->post('mon_melady');        $data['mokafa_date'] = strtotime($this->input->post('mokafa_date'));        $data['mokafa_date_ar'] = $this->input->post('mokafa_date');        $data['month'] = date('m',$data['mokafa_date']);        $data['year'] = date('Y',$data['mokafa_date']);        $mokafa_value_type=0;        $data['mokafa_value_type'] = $mokafa_value_type;        //$data['mokafa_value_type'] = $this->input->post('mokafa_value_type');        $data['mokafa_type'] = $this->input->post('mokafa_type');        $data['total_value'] = $this->input->post('total_value');        $data['about'] = $this->chek_Null($this->input->post('about'));        $data['presence_number'] = $this->chek_Null(count($this->input->post('value')));        $data['publisher'] = $_SESSION["user_id"];        $this->db->insert('hr_mokafat', $data);        $this->insert_details($data['mokafa_rkm']);    }    //==========================================  /*  public function insert_details($sarf_num_fk)    {        $main = $this->input->post('value');        $bank_code = $this->input->post('bank_code');        $bank_name = $this->input->post('bank_name');        $bank_account_num = $this->input->post('bank_account_num');        $card_num = $this->input->post('card_num');        $name = $this->input->post('name');        $data["sarf_num_fk"] = $sarf_num_fk;        foreach ($main as $item => $value) {            $data['emp_code'] = $this->chek_Null($item);            $data['value'] = $this->chek_Null($value);            $data['bank_account_num'] = $this->chek_Null($bank_account_num[$item]);            $data['bank_code'] = $this->chek_Null($bank_code[$item]);            $data['bank_responsible_national_num'] = $this->chek_Null($card_num[$item]);            $data['bank_responsible_name'] = $this->chek_Null($name[$item]);            $this->db->insert("hr_mokafat_details", $data);        }       //die;    }*/    //========================================== public function insert_details($mokafa_rkm_fk)    {        $main = $this->input->post('value');        $bank_code = $this->input->post('bank_code');        $bank_name = $this->input->post('bank_name');        $bank_account_num = $this->input->post('bank_account_num');        $card_num = $this->input->post('card_num');        $name = $this->input->post('name');        $mosma_wazefy_n = $this->input->post('mosma_wazefy_n');        $edara_n = $this->input->post('edara_n');        $qsm_n = $this->input->post('qsm_n');        $data["mokafa_rkm_fk"] = $mokafa_rkm_fk;         $data["mokafa_types"] = $this->input->post('mokafa_types');        $data["mokafa_option"] = $this->input->post('mokafa_option');        foreach ($main as $item => $value) {            $data['emp_code'] = $this->chek_Null($item);            $data['value'] = $this->chek_Null($value);            $data['bank_account_num'] = $this->chek_Null($bank_account_num[$item]);            $data['bank_code'] = $this->chek_Null($bank_code[$item]);            $data['bank_responsible_national_num'] = $this->chek_Null($card_num[$item]);            $data['bank_responsible_name'] = $this->chek_Null($name[$item]);            $data['day'] = date('d',strtotime($this->input->post('mokafa_date')));            $data['mosma_wazefy_n'] = $this->chek_Null($mosma_wazefy_n[$item]);            $data['qsm_n'] = $this->chek_Null($qsm_n[$item]);            $data['edara_n'] = $this->chek_Null($edara_n[$item]);            $this->db->insert("hr_mokafat_details", $data);        }           }    //==========================================    public function select_where($Conditions_arr, $condition_year)    {        $this->db->select('basic.file_num , mother.mother_national_num_fk ,mother.full_name');        $this->db->from("basic");        $this->db->join('mother', 'mother.mother_national_num_fk = basic.mother_national_num', "left");        // $this->db->where("basic.suspend",4);        $this->db->where($Conditions_arr);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $data = $query->result();            $i = 0;            foreach ($query->result() as $row) {                $data[$i]->up_child = $this->get_up_child($row->mother_national_num_fk, $condition_year);                $data[$i]->down_child = $this->get_down_child($row->mother_national_num_fk, $condition_year);                $data[$i]->mother_num_in = $this->get_mother_num($row->mother_national_num_fk);                $i++;            }            return $data;        }        return false;    }    //==========================================    public function get_up_child($mother_national_num_fk, $condition_year)    {        $this->db->select('id, member_full_name');        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk); // ""        $this->db->where("member_birth_date_hijri_year <=", $condition_year);        $this->db->where("categoriey_member ", 3);        // $this->db->where("halt_elmostafid_member",1);        $this->db->where("persons_status", 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->num_rows();        }        return 0;    }    //==========================================    public function get_down_child($mother_national_num_fk, $condition_year)    {        $this->db->select('id, member_full_name');        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk); // ""        $this->db->where("member_birth_date_hijri_year >=", $condition_year);        $this->db->where("categoriey_member ", 3);        // $this->db->where("halt_elmostafid_member",1);        $this->db->where("persons_status", 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->num_rows();        }        return 0;    }    //==========================================    public function get_mother_num($mother_national_num_fk)    {        $this->db->select('mother_national_num_fk, full_name');        $this->db->from("mother");        $this->db->where("mother_national_num_fk", $mother_national_num_fk); // ""        $this->db->where("categoriey_m ", 1);        $this->db->where("halt_elmostafid_m", 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->num_rows();        }        return 0;    }    //==========================================    public function total_child($Conditions_arr)    {        $this->db->select('id, member_full_name');        $this->db->from("f_members");        $this->db->where($Conditions_arr);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->num_rows();        }        return 0;    }    //==========================================    //==========================================    public function update($sarf_num, $total_value)    {        $data['sarf_num'] = $this->input->post('sarf_num');        $data['sarf_date'] = strtotime($this->input->post('sarf_date'));        $data['sarf_date_ar'] = $this->input->post('sarf_date');        $data['bnod_help_fk'] = $this->input->post('bnod_help_id_fk');        $data['mon_melady'] = $this->input->post('mon_melady');        // $data['type_sarf'] = $this->input->post('sarf_type');        $data['method_type'] = $this->input->post('method_type');        // $data['type_family'] = $this->input->post('member_type');        $data['total_value'] = $total_value;        /*if( $this->input->post('method_type') != 3){            $data['bank_id_fk'] = $this->input->post('bank_id_fk');            $data['bank_account_num'] = $this->input->post('bank_account_num');        }*/        $data['publisher'] = $_SESSION["user_id"];        $this->db->where("sarf_num", $sarf_num);        $this->db->update($this->main_table, $data);    }    //==========================================    public function update_presence($sarf_num)    {        $data['presence_number'] = $this->input->post('presence_number');        $data['presence_year'] = $this->input->post('presence_year');        $this->db->where("sarf_num", $sarf_num);        $this->db->update($this->main_table, $data);    }    //==========================================    //==========================================    public function select_all_banks()    {        $this->db->select('id ,title');        $this->db->from("banks_settings");        $this->db->order_by("id", "DESC");        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->result();        }        return false;    }    //==========================================    public function printSarf($sarf_num)    {        return $this->db->select('family_mahaders_details.*, basic.file_num, mother.full_name')            ->join('basic', 'basic.mother_national_num=family_mahaders_details.mother_national_num_fk')            ->join('mother', 'mother.mother_national_num_fk=family_mahaders_details.mother_national_num_fk')            ->where('family_mahaders_details.sarf_num_fk', $sarf_num)            ->get('family_mahaders_details')            ->result();    }    //==========================================    public function getByArray($sarf_num)    {        // $h = $this->db->get_where($this->main_table,array("sarf_num"=>$sarf_num));        $this->db->select('*');        $this->db->from($this->main_table);        $this->db->join('bnod_help', 'bnod_help.id=family_mahaders.bnod_help_fk', "left");        $this->db->where(array("sarf_num" => $sarf_num));        $query = $this->db->get();        return $query->row_array();    }    //==========================================    public function select_sarf_detals($sarf_num_fk)    {        $this->db->select('family_mahaders_details.* ,                           mother.full_name as mother_name,                           basic.file_num as file_num_basic ,                           father.full_name as father_full_name ,                           family_bank_responsible.person_name ,                           family_bank_responsible.type as  bank_account_type,                           family_bank_responsible.person_id_fk ,                           family_bank_responsible.bank_account_num ,                           banks_settings.title as bank_name                            ');        $this->db->from("family_mahaders_details");        $this->db->join('mother', 'mother.mother_national_num_fk = family_mahaders_details.mother_national_num_fk', "left");        $this->db->join('father', 'father.mother_national_num_fk = family_mahaders_details.mother_national_num_fk', "left");        $this->db->join('basic', 'basic.mother_national_num = family_mahaders_details.mother_national_num_fk', "left");        $this->db->join('family_bank_responsible', 'family_bank_responsible.family_national_num_fk = family_mahaders_details.mother_national_num_fk', "left");        $this->db->join('banks_settings', 'banks_settings.id = family_bank_responsible.bank_id_fk', "left");        $this->db->order_by("family_mahaders_details.file_num", "ASC");        $this->db->where("sarf_num_fk", $sarf_num_fk);        $query = $this->db->get(); // banks_settings        if ($query->num_rows() > 0) {            $data = $query->result();            $i = 0;            foreach ($query->result() as $row) {                $data[$i]->mother_num_in = $this->get_armal_sum_armal_full_active_mother($row->mother_national_num_fk);                //  $data[$i]->armal_sub_active = $this->get_armal_sum_armal_sub_active_mother($row->mother_national_num);                      /********* الايتام ***********/                $data[$i]->down_child = $this->get_yatem_full_active__SARF($row->mother_national_num_fk);                //   $data[$i]->yatem_sub_active = $this->get_yatem_sub_active($row->mother_national_num);                 /********* البالغين ***********/                $data[$i]->up_child = $this->get_bale3_full_active__SARF($row->mother_national_num_fk);                ///  $data[$i]->bale3_sub_active = $this->get_bale3_sub_active($row->mother_national_num);                /****************************************************************************************************/                $data[$i]->person_name = $this->get_person($row->bank_account_type, $row->person_id_fk, $row->person_name);                $i++;            }            return $data;        }        return false;    }    public function select_all()    {        $this->db->select('*');        $this->db->from('hr_mokafat');       // $this->db->join('bnod_help', 'bnod_help.id = hr_mokafat.bnod_help_fk', "left");        //$this->db->group_by("sarf_num");        $this->db->order_by("id", "DESC");        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->result();        }        return false;    }  /*  public function select_all_sarf_detalis($sarf_num_fk){        $this->db->select('hr_mokafat_details.*,        employees.emp_code,employees.nationality,        banks_settings.bank_code,banks_settings.title as bank_title');        $this->db->from('hr_mokafat_details');        $this->db->join('employees', 'employees.emp_code = hr_mokafat_details.emp_code', "left");        $this->db->join('banks_settings', 'banks_settings.bank_code = hr_mokafat_details.bank_code', "left");        $this->db->where("sarf_num_fk", $sarf_num_fk);        $this->db->order_by("hr_mokafat_details.emp_code", "asc");        $query = $this->db->get();        if ($query->num_rows() > 0) {            $x = 0;            foreach ($query->result() as $row) {                $data[$x] = $row;                $data[$x]->nationality = $this->get_from_employee_setting($row->nationality);                $x++;            }            return $data;        }else{            return false;        }    }*/    	    public function select_all_sarf_detalis($sarf_num_fk){        $this->db->select('hr_mokafat_details.*,        employees.emp_code,employees.nationality,        banks_settings.bank_code,banks_settings.title as bank_title');        $this->db->from('hr_mokafat_details');        $this->db->join('employees', 'employees.emp_code = hr_mokafat_details.emp_code', "left");        $this->db->join('banks_settings', 'banks_settings.bank_code = hr_mokafat_details.bank_code', "left");        $this->db->where("mokafa_rkm_fk", $sarf_num_fk);        $this->db->order_by("hr_mokafat_details.emp_code", "asc");        $query = $this->db->get();        if ($query->num_rows() > 0) {            $x = 0;            foreach ($query->result() as $row) {                $data[$x] = $row;                $data[$x]->nationality = $this->get_from_employee_setting($row->nationality);                $x++;            }            return $data;        }else{            return false;        }    }    public function getLastRecord()    {            //  $array = array('hr_mokafat.cashing_date>='=>strtotime(date("Y-m-d")),'hr_mokafat.approved'=>1);            $array = array('hr_mokafat.sarf_num>='=>10,'hr_mokafat.approved'=>1);        return $this->db->select('*')            ->where($array)            ->get('hr_mokafat')            ->row_array();    }    public function make_approve($id){        $data['approved']=1;        $data['cashing_date']=strtotime($this->input->post('cashing_date'));        $data['due_date']=strtotime($this->input->post('due_date'));        $this->db->where('id',$id);        $this->db->update('hr_mokafat',$data);    }    /*public function getSarf_data($sarf_num)    {        $h = $this->db->get_where("hr_mokafat", array('sarf_num' => $sarf_num));        return $h->row_array();    }*/   public function getSarf_data($sarf_num)    {        $h = $this->db->get_where("hr_mokafat", array('mokafa_rkm' => $sarf_num));        return $h->row_array();    }	    public function check_mosayar_months($year){        $query = $this->db->select('month')->where('year',$year)->get('hr_mosayar_total')->result();        if (!empty($query)) {            $data = array();            foreach ($query as $row) {                array_push($data, $row->month);            }            return $data;        } else{            return array();        }    }    //==========================================    public function get_person($type, $person_id_fk, $person_name)    {        if ($type == 0) {            return $person_name;        } elseif ($type == 1) {            $this->db->where('id', $person_id_fk);            $query = $this->db->get('mother');            if ($query->num_rows() > 0) {                return $query->row()->full_name;            } else {                return "لم يضاف الاسم";            }        } elseif ($type == 2) {            $this->db->where('id', $person_id_fk);            $query = $this->db->get('f_members');            if ($query->num_rows() > 0) {                return $query->row()->member_full_name;            } else {                return "لم يضاف الاسم";            }        }    }    //==========================================    public function delete_sarf($sarf_num)    {        $this->db->where("sarf_num", $sarf_num);        $this->db->delete($this->main_table);        $this->delete_sarf_detals($sarf_num);    }    //==========================================    public function delete_sarf_detals($sarf_num)    {        $this->db->where("sarf_num_fk", $sarf_num);        $this->db->delete("family_mahaders_details");    }    //==========================================    public function delete_sarf_detals_id($id)    {        $this->db->where("id", $id);        $this->db->delete("family_mahaders_details");    }    //==========================================    public function get_person_values($sarf_num_fk)    {        $this->db->select('*');        $this->db->from("family_mahaders_details");        $this->db->where("sarf_num_fk", $sarf_num_fk);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $data['mother_count'] = 0;            $data['mother_value'] = 0;            $data['young_count'] = 0;            $data['young_value'] = 0;            $data['adult_count'] = 0;            $data['adult_value'] = 0;            foreach ($query->result() as $row) {                //============================================                if ($row->mother_value != 0) {                    $data['mother_count'] += 1;                    $data['mother_value'] += $row->mother_value;                }                if ($row->young_value != 0) {                    $data['young_count'] += 1;                    $data['young_value'] += $row->young_value;                }                if ($row->adult_value != 0) {                    $data['adult_count'] += 1;                    $data['adult_value'] += $row->adult_value;                }                //============================================            }            $data_return["mother_value"] = ($data['mother_count'] != 0 ? $data['mother_value'] / $data['mother_count'] : 0);            $data_return["young_value"] = ($data['young_value'] != 0 ? $data['young_value'] / $data['young_count'] : 0);            $data_return["adult_value"] = ($data['adult_count'] != 0 ? $data['adult_value'] / $data['adult_count'] : 0);            return $data_return;        }        return false;    }    //==========================================    public function get_sarf_total_value($sarf_num_fk)    {        $this->db->select('value');        $this->db->from("family_mahaders_details");        $this->db->where("sarf_num_fk", $sarf_num_fk);        $query = $this->db->get();        $total = 0;        if ($query->num_rows() > 0) {            foreach ($query->result() as $row) {                $total += $row->value;            }        }        return $total;    }    //==========================================    public function check_family($file_num)    {        $this->db->select('final_suspend');        $this->db->from("basic");        $this->db->where("file_num", $file_num);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $data = $query->row_array();            return $data["final_suspend"];        }        return "not_found";    }    //==========================================//    public function select_all_bnod()//    {//        $this->db->select('*');//        $this->db->from("bnod_help");//        $this->db->where("type", 2);//        $this->db->order_by("id", "DESC");//        $query = $this->db->get();//        if ($query->num_rows() > 0) {//            return $query->result();//        }//        return false;//    }    /*   *  ================================================================================================================   *   *   */    //==================================================================    public function get_mother_selelct($mother_national_num_fk)    {        $this->db->select("full_name , id ,  mother_national_num_fk");        $this->db->from("mother");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where("person_type", 62);        $this->db->where("categoriey_m", 1);        $this->db->where('halt_elmostafid_m', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->result();        }        return false;    }    public function get_member_select($mother_national_num_fk)    {        $this->db->select("member_full_name  , id ,  mother_national_num_fk");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->result();        }        return false;    }    /*     *  ================================================================================================================     *     *     */    public function get_family_caching_member($Conditions_arr, $condition_mother, $condition_member)    {        $this->db->select('basic.file_num ,basic.mother_national_num  ,                          mother.mother_national_num_fk ,mother.full_name ,                          father.full_name as father_full_name  ');        $this->db->from("basic");        $this->db->join('mother', 'mother.mother_national_num_fk = basic.mother_national_num', "left");        $this->db->join('father', 'father.mother_national_num_fk = basic.mother_national_num', "left");        $this->db->where($Conditions_arr);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $data = $query->result();            $i = 0;            foreach ($query->result() as $row) {                /********* الارامل ***********/                $data[$i]->mother_num_in = $this->get_armal_sum_armal_full_active_mother($row->mother_national_num_fk, $condition_mother);                // $data[$i]->mother_data_in = $this->get_data_armal_sum_armal_full_active_mother($row->mother_national_num_fk,$condition_mother);                /********* الايتام ***********/                $data[$i]->down_child = $this->get_yatem_full_active($row->mother_national_num_fk, $condition_member);                //  $data[$i]->down_data_child = $this->get_data_yatem_full_active($row->mother_national_num_fk,$condition_member);                /********* البالغين ***********/                $data[$i]->up_child = $this->get_bale3_full_active($row->mother_national_num_fk, $condition_member);                //$data[$i]->up_data_child = $this->get_data_bale3_full_active($row->mother_national_num_fk,$condition_member);                /****************************************************************************************************/                $data[$i]->bank_details = $this->get_Bank_details($row->mother_national_num_fk);                $i++;            }            return $data;        }        return false;    }    //======================   31-10-2018 =================    public function getBank_name($id)    {        $h = $this->db->get_where("banks_settings", array('id' => $id));        return $h->row_array()['ar_name'];    }    public function getBank_code($id)    {        $h = $this->db->get_where("banks_settings", array('id' => $id));        return $h->row_array()['bank_code'];    }    public function get_Bank_details($id)    {        $this->db->select('*');        $this->db->from('family_bank_responsible');        $this->db->where('family_national_num_fk', $id);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $data = $query->row();            $data->bank_name = $this->getBank_name($data->bank_id_fk);            $data->bank_code = $this->getBank_code($data->bank_id_fk);            $data->file_num = $this->getbasic_file_num($id)['file_num'];            $data->mother_num_in = $this->get_armal_sum_armal_full_active_mother__Sarf($id);            //  $data[$i]->armal_sub_active = $this->get_armal_sum_armal_sub_active_mother($row->mother_national_num);            /********* الايتام ***********/            $data->down_child = $this->get_yatem_full_active__SARF($id);            //   $data[$i]->yatem_sub_active = $this->get_yatem_sub_active($row->mother_national_num);            /********* البالغين ***********/            $data->up_child = $this->get_bale3_full_active__SARF($id);            if ($data->person_id_fk == 0) {                $data->person_name = $data->person_name;                $data->person_card = $data->person_national_card;            } elseif ($data->person_id_fk != 0 and $data->type == 1) {                $data->person_name = $this->getMother_data($data->person_id_fk)['full_name'];                $data->person_card = $this->getMother_data($data->person_id_fk)['mother_national_card_new'];            } elseif ($data->person_id_fk != 0 and $data->type == 2) {                $data->person_name = $this->getfamily_member_data($data->person_id_fk)['member_full_name'];                $data->person_card = $this->getfamily_member_data($data->person_id_fk)['member_card_num'];            }            return $data;        }        return false;    }    public function getMother_data($id)    {        $h = $this->db->get_where("mother", array('id' => $id));        return $h->row_array();    }    public function getfamily_member_data($id)    {        $h = $this->db->get_where("f_members", array('id' => $id));        return $h->row_array();    }    //======================   31-10-2018 =================    public function getbasic_file_num($mother_national_num)    {        $h = $this->db->get_where("basic", array('mother_national_num' => $mother_national_num));        return $h->row_array();    }    //==========================================================================================================// أرملة ونشط كلي    public function get_data_armal_sum_armal_full_active_mother($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("mother");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        if (!empty($condition_arr)) {            $this->db->where($condition_arr);        }        $this->db->where("categoriey_m", 1);        $this->db->where('halt_elmostafid_m', 1);        $this->db->where('person_type', 62);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->result();        }        return false;    }    public function get_armal_sum_armal_full_active_mother__Sarf($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("mother");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where($condition_arr);        $this->db->where("categoriey_m", 1);        $this->db->where('halt_elmostafid_m', 1);        $this->db->where('person_type', 62);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        }        return 0;    }    //----------------------------    public function get_armal_sum_armal_full_active_mother($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("mother");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where($condition_arr);        $this->db->where("categoriey_m", 1);        $this->db->where('halt_elmostafid_m', 1);        $this->db->where('person_type', 62);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        }        return 0;    }    //===========================================================    public function get_data_yatem_full_active($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        if (!empty($condition_arr)) {            $this->db->where($condition_arr);        }        // $this->db->where('halt_elmostafid_member',1);        $this->db->where('persons_status', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->result();        }        return false;    }    //----------------------------    public function get_yatem_full_active($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where($condition_arr);        // $this->db->where('halt_elmostafid_member',1);        $this->db->where('persons_status', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        }        return 0;    }    public function get_yatem_full_active__SARF($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where("categoriey_member", 2);        $this->db->where('persons_status', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        }        return 0;    }    public function get_bale3_full_active__SARF($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where("categoriey_member", 3);        $this->db->where('persons_status', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        }        return 0;    }    //========================================================    public function get_data_bale3_full_active($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where("categoriey_member", 3);        if (!empty($condition_arr)) {            $this->db->where($condition_arr);        }        // $this->db->where('halt_elmostafid_member',1);        $this->db->where('persons_status', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->result();        }        return false;    }    //----------------------------    public function get_bale3_full_active($mother_national_num_fk, $condition_arr = array())    {        $this->db->select("*");        $this->db->from("f_members");        $this->db->where("mother_national_num_fk", $mother_national_num_fk);        $this->db->where("categoriey_member", 3);        $this->db->where($condition_arr);        //  $this->db->where('halt_elmostafid_member',1);        $this->db->where('persons_status', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        }        return 0;    }    //========================================================    public function select_sarf_attach($sarf_num_fk)    {        $this->db->select('*');        $this->db->from("finance_sarf_order_attachments");        $this->db->where("$sarf_num_fk", $sarf_num_fk);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->result();        }        return false;    }    //========================================================    public function insert_sarf_attach($sarf_num_fk, $images)    {        if (!empty($images)) {            foreach ($images as $key => $value) {                $data["sarf_num_fk"] = $sarf_num_fk;                $data["attachment"] = $value;                $data["attachment_title"] = $this->input->post("attachment_title")[$key];                $this->db->insert("finance_sarf_order_attachments", $data);            }        }    }    //========================================================    public function delete_sarf_attach($id)    {        $this->db->where("id", $id);        $this->db->delete("finance_sarf_order_attachments");    }    /*******************************************************/    public function get_by_id($sarf_num)    {        $this->db->where("sarf_num", $sarf_num);        $query = $this->db->get('family_mahaders');        if ($query->num_rows() > 0) {            $data = array();            $x = 0;            foreach ($query->result() as $row) {                $data[$x] = $row;                $data[$x]->member = $this->get_member($row->sarf_num);                $data[$x]->value_money = $this->get_member_value($row->sarf_num);                $data[$x]->lagna_member = $this->get_lagna_member($row->sarf_num);                $data[$x]->session_num = $this->get_session_num($row->sarf_num)['session_num'];                if ($data[$x]->session_num != 0) {                    $data[$x]->galsa_num_year = $this->get_galsa_num_year($data[$x]->session_num);                }            }            return $data;        } else {            return false;        }    }    public function get_session_num($sarf_num)    {        $h = $this->db->get_where("transformation_lagna", array('surf_num' => $sarf_num));        return $h->row_array();    }    public function get_galsa_num_year($session_num)    {        $h = $this->db->get_where("selected_lagna_members", array('session_number' => $session_num));        return $h->row_array();    }    public function get_member($sarf_num)    {        $this->db->where("sarf_num_fk", $sarf_num);        $query = $this->db->get('family_mahaders_details');        return $query->num_rows();    }    public function get_member_value($sarf_num)    {        $this->db->where("sarf_num_fk", $sarf_num);        $query = $this->db->get('family_mahaders_details');        if ($query->num_rows() > 0) {            return $query->row()->value;        } else {            return 0;        }    }    public function get_lagna_member()    {        $query = $this->db->get('lagna_members')->result();        $data = array();        $x = 0;        foreach ($query as $row) {            $data[$x] = $row;            $data[$x]->member_name = $this->get_member_name($row->lagna_num, $row->type, $row->member_id, $row->member_out_db);            $x++;        }        return $data;    }    public function get_member_name($num, $type, $id, $out)    {        if ($type == 1) {            $this->db->where('id', $id);            return $this->db->get('magls_members_table')->row()->member_name;        }        if ($type == 2) {            $this->db->where('id', $id);            return $this->db->get('general_assembley_members')->row()->name;        }        if ($type == 3) {            $this->db->where('id', $id);            return $this->db->get('employees')->row()->employee;        }        if ($type == 0) {            return $out;        }    }    public function direct_manger($sarf_num)    {        $manger_check_name = $this->input->post('manger_check_name');        if ($manger_check_name == 1) {            $data['manger_check_name'] = 1;            $data['manager_reason'] = $this->input->post('manager_reason');        } else {            $data['manger_check_name'] = $this->input->post('manager_text');            $data['manager_reason'] = $this->input->post('manager_reason');        }        $this->db->where('sarf_num', $sarf_num);        $this->db->update('family_mahaders', $data);    }    /*************************************************************************/    public function money_function($mother_national_num_fk)    {        $mothers_data = $this->GetMotherTable($mother_national_num_fk);        $count = 0;        if (!empty($mothers_data)) {            if ($mothers_data['categoriey_m'] == 1 || $mothers_data['categoriey_m'] == 2) {                $count = $this->sum_mosfed_in_mother($mother_national_num_fk);            }        }        $data['member_num'] = $this->sum_mosfed_in_f_members($mother_national_num_fk) + $count;        if ($data['member_num'] == 0) {            $data['member_num'] = 1;        }        $total = $this->Getfamily_income_duties($mother_national_num_fk);        $data['naseb'] = ($total / $data['member_num']);        $data['f2a'] = $this->GetF2a($data['naseb']);        return ($data['f2a']);    }    /***************************************************/    public function GetMotherTable($mother_national_num_fk)    {        $h = $this->db->get_where("mother", array('mother_national_num_fk' => $mother_national_num_fk));        return $h->row_array();    }    public function Getfamily_income_duties($mother_national_num_fk)    {        $this->db->select('*');        $this->db->from('family_income_duties');        $this->db->where('mother_national_num_fk', $mother_national_num_fk);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $income_total = 0;            $income_duties = 0;            foreach ($query->result() as $row) {                if ($row->type == 1) {                    $income_total += $row->value;                } elseif ($row->type == 2) {                    $income_duties += $row->value;                }            }            $total = $income_total - $income_duties;            return $total;        } else {            return 0;        }    }    public function sum_mosfed_in_mother($mother_national_num_fk)    {        $this->db->select('*');        $this->db->from('mother');        $this->db->where('mother_national_num_fk', $mother_national_num_fk);        $this->db->where('person_type', 62);        $this->db->where('halt_elmostafid_m', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        } else {            return 0;        }    }    public function sum_mosfed_in_f_members($mother_national_num_fk)    {        $this->db->select('*');        $this->db->from('f_members');        $this->db->where('mother_national_num_fk', $mother_national_num_fk);        $this->db->where('member_person_type', 62);        $this->db->where('halt_elmostafid_member', 1);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $rowcount = $query->num_rows();        } else {            return 0;        }    }    public function GetF2a($value)    {        $this->db->where('from <=', $value);        $this->db->where('to >=', $value);        $query = $this->db->get("family_category");        if ($query->num_rows() > 0) {            return $query->row()->title;        } else {            return 'غير محدد';        }    }    /**********************************************/    public function get_mother_file($file_num)    {        $this->db->where('file_num', $file_num);        $query = $this->db->get('basic');        if ($query->num_rows() > 0) {            $main_val = $this->get_rent_main_value($query->row()->family_cat);            $increase_value = $this->get_rent_increase_value($query->row()->family_cat);            $member = $this->get_members($query->row()->mother_national_num);            return $main_val + ($member * $increase_value);        } else {            return 0;        }    }    public function get_rent_main_value($family_cat)    {        $this->db->where('fe2a_id_fk', $family_cat);        $query = $this->db->get('rents_setting');        if ($query->num_rows() > 0) {            return $query->row()->main_value;        } else {            return 0;        }    }    public function get_rent_increase_value($family_cat)    {        $this->db->where('fe2a_id_fk', $family_cat);        $query = $this->db->get('rents_setting');        if ($query->num_rows() > 0) {            return $query->row()->increase_value;        } else {            return 0;        }    }    public function get_members($mother_national_num)    {        $this->db->where('mother_national_num_fk', $mother_national_num);        $query = $this->db->get('f_members');        return $query->num_rows();    }    public function select_all_finance_sarf_order()    {        $this->db->select('family_mahaders.* ,bnod_help.title as band_name,        bnod_help.rkm_hesab_name,bnod_help.rkm_hesab_mostafed_name,        bnod_help.rkm_hesab_yatem_name,bnod_help.rkm_hesab_armal_name,          bnod_help.rkm_hesab_armal , bnod_help.rkm_hesab_yatem ,  bnod_help.rkm_hesab_mostafed ,  bnod_help.rkm_hesab ');        $this->db->from($this->main_table);        $this->db->join('bnod_help', 'bnod_help.id = family_mahaders.bnod_help_fk', "left");        //$this->db->group_by("sarf_num");        $this->db->order_by("id", "DESC");        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->result();        }        return false;    }    public function update_amin_manager($id)    {        $data['amin_name'] = $this->input->post('amin_name');        $data['manager_name'] = $this->input->post('manager_name');        $data['naeb_name'] = $this->input->post('naeb_name');        $this->db->where("id", $id);        $this->db->update('hr_mokafat', $data);    }    public  function insert_file($file,$sarf_num){        $data['file_downloded'] = $file;        $this->db->where('sarf_num',$sarf_num);        $this->db->update('hr_mokafat', $data);    }                      public function cheetDetailes_emp($num){        $this->db->select('*');        $this->db->from("hr_mokafat_details");      //  $this->db->join("family_data","finance_sarf_order_details.mother_national_num_fk=family_data.file_num");       // $this->db->join("banks_settings","banks_settings.id=family_data.bank_id_fk ");     //  $this->db->join("basic","finance_sarf_order_details.mother_national_num_fk=basic.mother_national_num");        $this->db->where("sarf_num_fk",$num);        return $this->db->get()->result();    }                public function getById_emp($num){        $h = $this->db->get_where("hr_mokafat", array('sarf_num'=>$num));        return $h->row_array();    }   public function getBand_help_name($bnod_help_fk){        $h = $this->db->get_where("bnod_help", array('id'=>$bnod_help_fk));        return $h->row_array()['short_title'];    }    public function select_main_data_sarf($id)    {        $this->db->select('hr_mokafat.* ,bnod_help.title as band_name');        $this->db->from('hr_mokafat');        $this->db->join('bnod_help', 'bnod_help.id = hr_mokafat.bnod_help_fk',"left");        $this->db->where("sarf_num",$id);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $data =  $query->row() ;            $data->count_sarf_member = $this->count_sarf_member($data->sarf_num);            return $data;        }        return false;    }    public function count_sarf_member($sarf_num)    {        $this->db->select('*');        $this->db->from('hr_mokafat_details');        $this->db->where("sarf_num_fk",$sarf_num);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->num_rows() ;        }        return 0;    }    public function select_from_main_data()    {        $this->db->select('*');        $this->db->from('main_data');        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->row() ;        }        return false;    }    public function delete_mokfaat($table,$arr){        $this->db->where($arr);        $this->db->delete($table);    }    public function get_some_emp()    {          $checkbox_value = $this->input->post('checkbox_value');          $arr = explode(',',$checkbox_value);            $this->db->where_in('emp_code', $arr);        $this->db->order_by('emp_code') ;        $query = $this->db->get('employees');        if ($query->num_rows() > 0) {            $x = 0;            foreach ($query->result() as $row) {                $data[$x] = $row;                $data[$x]->nationality = $this->get_from_employee_setting($row->nationality);                $data[$x]->banks = $this->get_approved_banks(array('emp_code'=>$row->id));                $x++;            }            return $data;        } else {            return false;        }    }    public function select_month_data()    {        $this->db->select('*');        $this->db->from('hr_mokafat');        $this->db->where('month',date('m'));        $this->db->where('year',date('Y'));        $query = $this->db->get();        if ($query->num_rows() > 0) {            foreach ( $query->result() as $row){              $data[] =  $row->mokafa_rkm;            }            return $data ;        }        return false;    }    public function select_month_data_by_day($day,$arr,$emp_code)    {        $this->db->select('*');        $this->db->from('hr_mokafat_details');        $this->db->where_in('mokafa_rkm_fk',$arr);        $this->db->where('day',$day);        $this->db->where('emp_code',$emp_code);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $total =0;            foreach ( $query->result() as $row){                $total +=$row->value;            }            return $total ;        }        return false;    }    public function select_mokafat_data()    {     $mokafat_num_arr =$this->select_month_data();     if(!empty($mokafat_num_arr)) {         $this->db->select('*');         $this->db->from('hr_mokafat_details');         $this->db->where_in('mokafa_rkm_fk', $mokafat_num_arr);         $this->db->group_by('emp_code');         $query = $this->db->get();         if ($query->num_rows() > 0) {             $x=1;             foreach ( $query->result() as $row){                 $data[$x] =  $row;                 $data[$x]->days =  $this->get_days($mokafat_num_arr,$row->emp_code);             $x++;}             return $data ;         }     }        return false;    }    public  function  get_days($mokafat_num_arr,$emp_code){        $days_arr = array();        for ($a = 1; $a < 19; $a++) {            $days_arr[] = $a;        }        array_unshift($days_arr, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31);  if(!empty($days_arr)){      foreach ($days_arr as $row){          $arr[$row]=$this->select_month_data_by_day($row,$mokafat_num_arr,$emp_code);      }      return $arr;    }    }}//END CLASS