<?phpclass MokafatCashing extends MY_Controller{    public function __construct()    {        parent::__construct();        $this->load->library('pagination');        if ($this->session->userdata('is_logged_in') == 0) {            redirect('login');        }        $this->load->helper(array('url', 'text', 'permission', 'form'));        $this->load->model('system_management/Groups');        $this->main_groups = $this->Groups->main_fetch_group();        $this->groups = $this->Groups->get_group($_SESSION["group_number"]);        $this->groups_title = $this->Groups->get_group_title($_SESSION["group_number"]);        /**********************************************************/        $this->load->model('familys_models/for_dash/Counting');        $this->count_basic_in = $this->Counting->get_basic_in_num();        $this->files_basic_in = $this->Counting->get_files_basic_in();        /*************************************************************/        $this->load->model('human_resources_model/Employee_model');       // $this->load->model('human_resources_model/employee_forms/mokafat_cashing_model/Model_mokafat_cashing');         $this->load->model('human_resources_model/mosayar/mokafat_cashing_model/Model_mokafat_cashing');    }    //--------------------------------------------------    private function test($data = array())    {        echo "<pre>";        print_r($data);        echo "</pre>";        die;    }    //--------------------------------------------------    private function upload_all_files($file_name, $folder = "sarf_attaches")    {        $config['upload_path'] = 'uploads/files/' . $folder;        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf|pdf|PDF|xls|xlsx|mp4|doc|docx|txt|rar|tar.gz|zip';        $config['max_size'] = '80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';        $config['encrypt_name'] = true;        $this->load->library('upload', $config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            return $datafile['file_name'];        }    }    private function upload_image($file_name)    {        $config['upload_path'] = 'uploads/images';        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf';        $config['max_size'] = '1024*8';        $config['encrypt_name'] = true;        $this->load->library('upload', $config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            // $this->thumb($datafile);            return $datafile['file_name'];        }    }    //-----------------------------------------------    private function upload_file($file_name)    {        $config['upload_path'] = 'uploads/files';        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf|pdf|PDF|xls|xlsx|mp4|doc|docx|txt|rar|tar.gz|zip';        $config['max_size'] = '1024*8';        $config['encrypt_name'] = true;        $config['overwrite'] = true;        $this->load->library('upload', $config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            return $datafile['file_name'];        }    }    //-------------------------------------------------    private function upload_muli_image($input_name)    {        $filesCount = count($_FILES[$input_name]['name']);        for ($i = 0; $i < $filesCount; $i++) {            $_FILES['userFile']['name'] = $_FILES[$input_name]['name'][$i];            $_FILES['userFile']['type'] = $_FILES[$input_name]['type'][$i];            $_FILES['userFile']['tmp_name'] = $_FILES[$input_name]['tmp_name'][$i];            $_FILES['userFile']['error'] = $_FILES[$input_name]['error'][$i];            $_FILES['userFile']['size'] = $_FILES[$input_name]['size'][$i];            $all_img[] = $this->upload_all_files("userFile");        }        return $all_img;    }    //-------------------------------------------------    private function url()    {        unset($_SESSION['url']);        $this->session->set_flashdata('url', 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);    }    //-------------------------------------------------    private function current_hjri_year()    {        $time = mktime(0, 0, 0, Date('m'), Date('j'), Date('Y'));        $TDays = round($time / (60 * 60 * 24));        $HYear = round($TDays / 354.37419);        $Remain = $TDays - ($HYear * 354.37419);        $HMonths = round($Remain / 29.531182);        $HDays = $Remain - ($HMonths * 29.531182);        $HYear = $HYear + 1389;        $HMonths = $HMonths + 10;        $HDays = $HDays + 23;        if ($HDays > 29.531188 and round($HDays) != 30) {            $HMonths = $HMonths + 1;            $HDays = Round($HDays - 29.531182);        } else {            $HDays = Round($HDays);        }        if ($HMonths > 12) {            $HMonths = $HMonths - 12;            $HYear = $HYear + 1;        }        $NowDay = $HDays;        $NowMonth = $HMonths;        $NowYear = $HYear;        $MDay_Num = date("w");        if ($MDay_Num == "0") {            $MDay_Name = "الأحد";        } elseif ($MDay_Num == "1") {            $MDay_Name = "الإثنين";        } elseif ($MDay_Num == "2") {            $MDay_Name = "الثلاثاء";        } elseif ($MDay_Num == "3") {            $MDay_Name = "الأربعاء";        } elseif ($MDay_Num == "4") {            $MDay_Name = "الخميس";        } elseif ($MDay_Num == "5") {            $MDay_Name = "الجمعة";        } elseif ($MDay_Num == "6") {            $MDay_Name = "السبت";        }        $NowDayName = $MDay_Name;        $NowDate = $MDay_Name . "، " . $HDays . "/" . $HMonths . "/" . $HYear . " هـ";        return $HYear;    }    //-------------------------------------------------    public function messages($type,$text,$method=false)    {        $CI =& get_instance();        $CI->load->library("session");        if($type =='success') {            return $CI->session->set_flashdata('message','<script> swal({                    title:"'.$text.'" ,                    confirmButtonText: "تم"                })</script>');        }        elseif($type=='warning'){            return $CI->session->set_flashdata('message','<div class="alert alert-warning alert-dismissable"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><strong>   !</strong> '.$text.'.</div>');        }elseif($type=='error'){            return $CI->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissable"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><strong> !</strong> '.$text.'.</div>');        }    }    /**     *  ================================================================================================================     *     *  ================================================================================================================     *     *  ================================================================================================================     */ /*public function index()    {  // human_resources/employee_forms/MokafatCashing       // $this->load->model('familys_models/Member_session');        if ($this->input->post('ADD') == "ADD") {            $this->Model_mokafat_cashing->insert();            $this->messages('success', 'تم الا ضافة بنجاح');           // redirect('human_resources/employee_forms/MokafatCashing', 'refresh');           redirect('human_resources/mosayar/MokafatCashing', 'refresh');        }        else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');            $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();         // $data['mon_added'] = $this->Model_mokafat_cashing->check_mokafa_months(date('Y'));            $data['title'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'إعداد صرف المكافأت للموظفين  ';            $data['subview'] = 'admin/Human_resources/mosayar/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }*/        public function index()    {  // human_resources/employee_forms/MokafatCashing        $this->load->model('familys_models/Member_session');        if ($this->input->post('ADD') == "ADD") {            $this->Model_mokafat_cashing->insert();            $this->messages('success', 'تم الا ضافة بنجاح');            redirect('human_resources/mosayar/MokafatCashing', 'refresh');        }        else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');            $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();            $data['title'] = 'طلب صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'طلب صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'طلب صرف المكافأت للموظفين  ';             $data['subview'] = 'admin/Human_resources/mosayar/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }         /*   public function update_Mokafat($mokafa_rkm){      //  $this->load->model('familys_models/Member_session');        if ($this->input->post('UPDATE') == "UPDATE") {            $this->Model_mokafat_cashing->UPDATE_mokafa($mokafa_rkm);            $this->messages('success', 'تم الا ضافة بنجاح');            redirect('human_resources/mosayar/MokafatCashing', 'refresh');        }        else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');            $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();        //    $data['mon_added'] = $this->Model_mokafat_cashing->check_mokafa_months(date('Y'));            $data['mokafa_data'] = $this->Model_mokafat_cashing->getSarf_data($mokafa_rkm);            $data['mokafa_details_data'] = $this->Model_mokafat_cashing->select_all_sarf_detalis($mokafa_rkm);            $data["mokafat_type_arr"] = $this->Model_mokafat_cashing->get_mokafat_type();            $data['title'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'إعداد صرف المكافأت للموظفين  ';            $data['subview'] = 'admin/Human_resources/mosayar/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }*/            public function update_Mokafat($mokafa_rkm){        $this->load->model('familys_models/Member_session');        if ($this->input->post('UPDATE') == "UPDATE") {            $this->Model_mokafat_cashing->UPDATE_mokafa($mokafa_rkm);            $this->messages('success', 'تم الا ضافة بنجاح');             redirect('human_resources/mosayar/MokafatCashing', 'refresh');        }        else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');            $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();            $data['mokafa_data'] = $this->Model_mokafat_cashing->getSarf_data($mokafa_rkm);            $data['mokafa_details_data'] = $this->Model_mokafat_cashing->select_all_sarf_detalis($mokafa_rkm);            $data["mokafat_type_arr"] = $this->Model_mokafat_cashing->get_mokafat_type();            $data['title'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'إعداد صرف المكافأت للموظفين  ';             $data['subview'] = 'admin/Human_resources/mosayar/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }    //=======================================================    public function AccordingTo()    {        $this->load->model('Difined_model');        if ($this->input->post('according_to')) {            $according_to = $this->input->post('according_to');            $data_load = $_POST;            if ($according_to == 1) {                $data_load["family_types"] = $this->Difined_model->select_search_key("family_category", "id !=", "0");            } elseif ($according_to == 2) {                $data_load["education_types"] = $this->Difined_model->select_search_key("family_setting", "type", "40");            }            $this->load->view('admin/Human_resources/mosayar/mokafat_cashing_views/get_according_to', $data_load);        } elseif ($this->input->post('member_type')) {           /* echo'<pre>';            print_r($_POST);            echo'</pre>';            die;*/            $data_load["mokafat_type"] = $this->Model_mokafat_cashing->get_mokafat_type();            $data_load["type_sarf"] = 2;            $data_load["member_type"] = $this->input->post('member_type');            $this->load->view('admin/Human_resources/mosayar/mokafat_cashing_views/load_sarf_type', $data_load);        }    }    //=======================================================    public function LoadPage()    {        if ($this->input->post('sarf_type') == 2 && $this->input->post('member_type')          ) { //  2            $data_load = $_POST;            $member_type = $this->input->post('member_type');            if ($member_type == 3) {                $data_load['data_table'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');//              echo 'here1';//                die;                $this->load->view('admin/Human_resources/mosayar/mokafat_cashing_views/load_all_employs', $data_load);            } elseif ($member_type == 2) {              //  $data_load['data_table'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(array('emp_code' => $this->input->post('employee_code')));                $data_load['data_table'] = $this->Model_mokafat_cashing->get_some_emp();                $this->load->view('admin/Human_resources/mosayar/mokafat_cashing_views/load_some_employs', $data_load);            }        } elseif ($this->input->post('emp_code')) {            $emp_code = $this->input->post('emp_code');            echo $this->Employee_model->check_emp($emp_code);        }        elseif ($this->input->post('sarf_num_fk')) {            $sarf_num = $this->input->post('sarf_num_fk');            $data_load["sarf_details"] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);            $data_load['main_mokafa_data'] =$this->Model_mokafat_cashing->getSarf_data($sarf_num);            $this->load->view('admin/Human_resources/mosayar/mokafat_cashing_views/load_details', $data_load);        } elseif ($this->input->post("sarf_num_fk_tabadol")) {            $sarf_num = $this->input->post('sarf_num_fk_tabadol');            $data_load["sarf_details"] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);            $data_load["sarf_attachments"] = $this->Model_mokafat_cashing->select_sarf_attach($sarf_num);            $this->load->view('admin/Human_resources/mosayar/mokafat_cashing_views/load_details_exchange', $data_load);        }    }    /**     *  ================================================================================================================     *     *  ================================================================================================================     *     *  ================================================================================================================     */    /**********************/    public function read_all_file($file_name)    {        $this->load->helper('file');        // $file_name=$this->uri->segment(3);        $file_path = 'uploads/files/' . $file_name;        header('Content-Type: application/pdf');        header('Content-Discription:inline; filename="' . $file_name . '"');        header('Content-Transfer-Encoding: binary');        header('Accept-Ranges:bytes');        header('Content-Length: ' . filesize($file_path));        readfile($file_path);    }    public function downloads_all($file)    { //  md/all_glasat/All_glasat/downloads        $this->load->helper('download');        $name = $file;        $data = file_get_contents('./uploads/files' . $file);        force_download($name, $data);    }    /**********************************************************************************************************/    	 public  function delete_mokfaat($mokafa_rkm){        $this->Model_mokafat_cashing->delete_mokfaat('hr_mokafat_details', array('mokafa_rkm_fk'=>$mokafa_rkm));        $this->Model_mokafat_cashing->delete_mokfaat('hr_mokafat', array('mokafa_rkm'=>$mokafa_rkm));        $this->messages('success', "تم الحذف بنجاح");        redirect('human_resources/mosayar/MokafatCashing', 'refresh');    }public function all_Mokafat_month_report(){    $data['records'] = $this->Model_mokafat_cashing->select_mokafat_data();    //$data['data'] = $this->Model_mokafat_cashing->select_month_data_by_day();    /*echo'<pre>';    print_r( $data['records']);    echo'</pre>';    die;*/    $data['title'] = 'تقرير بمكافأت الموظفين خلال الشهر';    $data['metakeyword'] = 'تقرير بمكافأت الموظفين خلال الشهر';    $data['metadiscription'] = 'تقرير بمكافأت الموظفين خلال الشهر';    $data['subview'] = 'admin/Human_resources/mosayar/mokafat_cashing_views/all_Mokafat_month_report';    $this->load->view('admin_index', $data);}}// END CLASS