<?phpuse kcfinder\text;class MokafatCashing extends MY_Controller{    public function __construct()    {        parent::__construct();        $this->load->library('pagination');        if ($this->session->userdata('is_logged_in') == 0) {            redirect('login');        }        $this->load->helper(array('url', 'text', 'permission', 'form'));        $this->load->model('system_management/Groups');        $this->main_groups = $this->Groups->main_fetch_group();        $this->groups = $this->Groups->get_group($_SESSION["group_number"]);        $this->groups_title = $this->Groups->get_group_title($_SESSION["group_number"]);        /**********************************************************/        $this->load->model('familys_models/for_dash/Counting');        $this->count_basic_in = $this->Counting->get_basic_in_num();        $this->files_basic_in = $this->Counting->get_files_basic_in();        /*************************************************************/        $this->load->model('human_resources_model/Employee_model');        $this->load->model('human_resources_model/employee_forms/mokafat_cashing_model/Model_mokafat_cashing');    }    //--------------------------------------------------    private function test($data = array())    {        echo "<pre>";        print_r($data);        echo "</pre>";        die;    }    //--------------------------------------------------    private function upload_all_files($file_name, $folder = "sarf_attaches")    {        $config['upload_path'] = 'uploads/files/' . $folder;        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf|pdf|PDF|xls|xlsx|mp4|doc|docx|txt|rar|tar.gz|zip';        $config['max_size'] = '80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';        $config['encrypt_name'] = true;        $this->load->library('upload', $config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            return $datafile['file_name'];        }    }    private function upload_image($file_name)    {        $config['upload_path'] = 'uploads/images';        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf';        $config['max_size'] = '1024*8';        $config['encrypt_name'] = true;        $this->load->library('upload', $config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            // $this->thumb($datafile);            return $datafile['file_name'];        }    }    //-----------------------------------------------    private function upload_file($file_name)    {        $config['upload_path'] = 'uploads/files';        $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf|pdf|PDF|xls|xlsx|mp4|doc|docx|txt|rar|tar.gz|zip';        $config['max_size'] = '1024*8';        $config['encrypt_name'] = true;        $config['overwrite'] = true;        $this->load->library('upload', $config);        if (!$this->upload->do_upload($file_name)) {            return false;        } else {            $datafile = $this->upload->data();            return $datafile['file_name'];        }    }    //-------------------------------------------------    private function upload_muli_image($input_name)    {        $filesCount = count($_FILES[$input_name]['name']);        for ($i = 0; $i < $filesCount; $i++) {            $_FILES['userFile']['name'] = $_FILES[$input_name]['name'][$i];            $_FILES['userFile']['type'] = $_FILES[$input_name]['type'][$i];            $_FILES['userFile']['tmp_name'] = $_FILES[$input_name]['tmp_name'][$i];            $_FILES['userFile']['error'] = $_FILES[$input_name]['error'][$i];            $_FILES['userFile']['size'] = $_FILES[$input_name]['size'][$i];            $all_img[] = $this->upload_all_files("userFile");        }        return $all_img;    }    //-------------------------------------------------    private function url()    {        unset($_SESSION['url']);        $this->session->set_flashdata('url', 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);    }    //-------------------------------------------------    private function current_hjri_year()    {        $time = mktime(0, 0, 0, Date('m'), Date('j'), Date('Y'));        $TDays = round($time / (60 * 60 * 24));        $HYear = round($TDays / 354.37419);        $Remain = $TDays - ($HYear * 354.37419);        $HMonths = round($Remain / 29.531182);        $HDays = $Remain - ($HMonths * 29.531182);        $HYear = $HYear + 1389;        $HMonths = $HMonths + 10;        $HDays = $HDays + 23;        if ($HDays > 29.531188 and round($HDays) != 30) {            $HMonths = $HMonths + 1;            $HDays = Round($HDays - 29.531182);        } else {            $HDays = Round($HDays);        }        if ($HMonths > 12) {            $HMonths = $HMonths - 12;            $HYear = $HYear + 1;        }        $NowDay = $HDays;        $NowMonth = $HMonths;        $NowYear = $HYear;        $MDay_Num = date("w");        if ($MDay_Num == "0") {            $MDay_Name = "الأحد";        } elseif ($MDay_Num == "1") {            $MDay_Name = "الإثنين";        } elseif ($MDay_Num == "2") {            $MDay_Name = "الثلاثاء";        } elseif ($MDay_Num == "3") {            $MDay_Name = "الأربعاء";        } elseif ($MDay_Num == "4") {            $MDay_Name = "الخميس";        } elseif ($MDay_Num == "5") {            $MDay_Name = "الجمعة";        } elseif ($MDay_Num == "6") {            $MDay_Name = "السبت";        }        $NowDayName = $MDay_Name;        $NowDate = $MDay_Name . "، " . $HDays . "/" . $HMonths . "/" . $HYear . " هـ";        return $HYear;    }    //-------------------------------------------------    public function messages($type,$text,$method=false)    {        $CI =& get_instance();        $CI->load->library("session");        if($type =='success') {            return $CI->session->set_flashdata('message','<script> swal({                    title:"'.$text.'" ,                    confirmButtonText: "تم"                })</script>');        }        elseif($type=='warning'){            return $CI->session->set_flashdata('message','<div class="alert alert-warning alert-dismissable"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><strong>   !</strong> '.$text.'.</div>');        }elseif($type=='error'){            return $CI->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissable"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><strong> !</strong> '.$text.'.</div>');        }    }    /**     *  ================================================================================================================     *     *  ================================================================================================================     *     *  ================================================================================================================     */  /*  public function index()    {  //// human_resources/employee_forms/MokafatCashing        $this->load->model('familys_models/Member_session');        if ($this->input->post('ADD') == "ADD") {            $file = $this->upload_image("bank_attachment");            $this->Model_mokafat_cashing->insert($file);            $this->Model_mokafat_cashing->insert_details($this->input->post('sarf_num'));            $this->messages('success', 'تم الا ضافة بنجاح');            redirect('human_resources/employee_forms/MokafatCashing', 'refresh');        } else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');          //  $this->test($data['all_emps']);            $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();          //  $data['bnod_help'] = $this->Model_mokafat_cashing->select_all_bnod();            $data['title'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'إعداد صرف المكافأت للموظفين  ';            $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }*/ public function index()    {  // human_resources/employee_forms/MokafatCashing        $this->load->model('familys_models/Member_session');               if ($this->input->post('ADD') == "ADD") {            $this->Model_mokafat_cashing->insert();           // $this->Model_mokafat_cashing->insert_details($this->input->post('mokafa_rkm'));                     $this->messages('success', 'تم الا ضافة بنجاح');            redirect('human_resources/employee_forms/MokafatCashing', 'refresh');        }        else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');                 $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();                 //  $data['mon_added'] = $this->Model_mokafat_cashing->check_mosayar_months(date('Y'));            $data['title'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'إعداد صرف المكافأت للموظفين  ';            $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }    public function update_Mokafat($mokafa_rkm){        $this->load->model('familys_models/Member_session');        if ($this->input->post('UPDATE') == "UPDATE") {   /*echo'<pre>';   print_r($_POST);   echo'</pre>';   die;*/            $this->Model_mokafat_cashing->UPDATE_mokafa($mokafa_rkm);            // $this->Model_mokafat_cashing->insert_details($this->input->post('mokafa_rkm'));            $this->messages('success', 'تم الا ضافة بنجاح');            redirect('human_resources/employee_forms/MokafatCashing', 'refresh');        }        else {            $data['all_data'] = $this->Model_mokafat_cashing->select_all();            $data['all_emps'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');            $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();            $data['last_sarf'] = $this->Model_mokafat_cashing->select_last_value_fild();            $data['mon_added'] = $this->Model_mokafat_cashing->check_mosayar_months(date('Y'));            $data['mokafa_data'] = $this->Model_mokafat_cashing->getSarf_data($mokafa_rkm);            $data['mokafa_details_data'] = $this->Model_mokafat_cashing->select_all_sarf_detalis($mokafa_rkm);            $data["mokafat_type_arr"] = $this->Model_mokafat_cashing->get_mokafat_type();            $data['title'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metakeyword'] = 'إعداد صرف المكافأت للموظفين   ';            $data['metadiscription'] = 'إعداد صرف المكافأت للموظفين  ';            $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/add_employees_cashing';            $this->load->view('admin_index', $data);        }    }    //=======================================================    public function AccordingTo()    {        $this->load->model('Difined_model');        if ($this->input->post('according_to')) {            $according_to = $this->input->post('according_to');            $data_load = $_POST;            if ($according_to == 1) {                $data_load["family_types"] = $this->Difined_model->select_search_key("family_category", "id !=", "0");            } elseif ($according_to == 2) {                $data_load["education_types"] = $this->Difined_model->select_search_key("family_setting", "type", "40");            }            $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/get_according_to', $data_load);        } elseif ($this->input->post('member_type')) {           /* echo'<pre>';            print_r($_POST);            echo'</pre>';            die;*/            $data_load["mokafat_type"] = $this->Model_mokafat_cashing->get_mokafat_type();            $data_load["type_sarf"] = 2;            $data_load["member_type"] = $this->input->post('member_type');            $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/load_sarf_type', $data_load);        }    }    //=======================================================    public function LoadPage()    {        if ($this->input->post('sarf_type') == 2 && $this->input->post('member_type')          ) { //  2            $data_load = $_POST;            $member_type = $this->input->post('member_type');            if ($member_type == 3) {                $data_load['data_table'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(' ');//              echo 'here1';//                die;                $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/load_family', $data_load);            } elseif ($member_type == 2) {              //  $data_load['data_table'] = $this->Model_mokafat_cashing->SelectEmployeeDataByarr(array('emp_code' => $this->input->post('employee_code')));                $data_load['data_table'] = $this->Model_mokafat_cashing->get_some_emp();                $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/load_some_family', $data_load);            }        } elseif ($this->input->post('emp_code')) {            $emp_code = $this->input->post('emp_code');            echo $this->Employee_model->check_emp($emp_code);        }        elseif ($this->input->post('sarf_num_fk')) {            $sarf_num = $this->input->post('sarf_num_fk');            $data_load["sarf_details"] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);            $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/load_details', $data_load);        } elseif ($this->input->post("sarf_num_fk_tabadol")) {            $sarf_num = $this->input->post('sarf_num_fk_tabadol');            $data_load["sarf_details"] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);            $data_load["sarf_attachments"] = $this->Model_mokafat_cashing->select_sarf_attach($sarf_num);            $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/load_details_exchange', $data_load);        }    }    public function PrintMokafat_emp()    {        $sarf_num = $this->input->post('sarf_num');        $data["sarf_details"] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);        $data["record"] = $this->Model_mokafat_cashing->getSarf_data($sarf_num);        $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/print_all_mosyer', $data);    }    public function allSarf()    {   // human_resources/employee_forms/MokafatCashing/allSarf                                                                                                  //  family_controllers/Exchange/allSarf        $this->load->model('Difined_model');        $data['all_data'] = $this->Model_mokafat_cashing->select_all();        $data['alert'] = $this->Model_mokafat_cashing->getLastRecord();        // $this->PrintMessage('tranferQuod','');        $data['title'] = 'أذونات صرف المكافأت للموظفين';        $data['metakeyword'] = 'أذونات صرف المكافأت للموظفين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/all_sarf';        $this->load->view('admin_index', $data);    }    public function updateSarfToAproved($id)    {        if ($_POST['make_approve']) {            $this->Model_mokafat_cashing->make_approve($id);            redirect('human_resources/employee_forms/MokafatCashing/allSarf');        }    }    function PrintMessage($type, $valu)    {        $CI =& get_instance();        $CI->load->library("session");        if ($type == 'tranferQuod') {            return $CI->session->set_flashdata('message',                '<script src="https://cdn.jsdelivr.net/npm/sweetalert2"></script><script>		   Swal.fire({            title: " هل تريد  التحويل الى قيد ؟",            text: "",            type: "warning",            showCancelButton: true,            confirmButtonColor: "#3085d6",            cancelButtonColor: "#d33",            cancelButtonText: "لا, إلغاء الأمر!",            confirmButtonText: "نعم, قم بالتحويل!"        }).then((result) => {            if (result.value) {                           window.location.href = "' . base_url() . 'finance_accounting/box/quods/Quods/tarhel_bnod"   ;            }        })            </script>');        }    }    //=======================================================    public function SarfAttachments($sarf_num)    {        if ($this->input->post("Add_Attach") == "Add_Attach") {            $images = $this->upload_muli_image("attachment");            $this->Model_mokafat_cashing->insert_sarf_attach($sarf_num, $images);            $this->messages('success', 'تم إضافة المرفقات');            redirect('FamilyCashing', 'refresh');        }    }    //=======================================================    public function DeleteAttachments()    {  //  FamilyCashing/DeleteAttachments/        $id = $this->input->post("id_delete_attach");        $this->Model_mokafat_cashing->delete_sarf_attach($id);    }    //=======================================================    //=======================================================    public function printSarf($sarf_num)    {        $data['records'] = $this->Model_mokafat_cashing->printSarf($sarf_num);        $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/print', $data);    }    public function PrintSarfType($sarf_num, $method_type)    {        $data_load['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();        $data_load["sarf_data"] = $this->Model_mokafat_cashing->getByArray($sarf_num);        //   $data_load["sarf_details"]=$this->Model_mokafat_cashing->select_sarf_detals($sarf_num);        $data_load["sarf_details"] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);        //    $data_load['recordssss']=$this->Model_mokafat_cashing->get_by_id($sarf_num);        $data_load['sarf_details2'] = $this->Model_mokafat_cashing->select_all_sarf_detalis($sarf_num);        $data_load['Publisher_name'] = $this->Model_mokafat_cashing->Get_Publisher_name($sarf_num);        if ($method_type == 4) {            $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/print_sarf_4', $data_load);        } else {            $this->load->view('admin/Human_resources/employee_forms/mokafat_cashing_views/print_sarf_2', $data_load);        }    }    //=======================================================    public function DeleteFamilyCashing($sarf_num)    {        $this->Model_mokafat_cashing->delete_sarf($sarf_num);        $this->messages('success', 'تم حذف اذن الصرف ');        redirect('FamilyCashing', 'refresh');    }    //=======================================================    public function UpdateFamilyCashing($sarf_num)    {  //  FamilyCashing/UpdateFamilyCashing/        if ($this->input->post('UPDATE') == "UPDATE") {            if (sizeof($this->input->post('all_num')) > 0) {                $this->Model_mokafat_cashing->insert_details($sarf_num);            }            $total_value = $this->Model_mokafat_cashing->get_sarf_total_value($sarf_num);            $this->Model_mokafat_cashing->update($sarf_num, $total_value);            $this->messages('success', 'تم تعديل اذن الصرف ');            redirect('FamilyCashing', 'refresh');        }        $data['all_banks'] = $this->Model_mokafat_cashing->select_all_banks();        $sarf_data = $data["sarf_data"] = $this->Model_mokafat_cashing->getByArray($sarf_num);        $data["sarf_details"] = $this->Model_mokafat_cashing->select_sarf_detals($sarf_num);        if ($sarf_data["type_sarf"]) {            $data["person_values"] = $this->Model_mokafat_cashing->get_person_values($sarf_num);        }        $data['bnod_help'] = $this->Model_mokafat_cashing->select_all_bnod();        $data['title'] = 'تعديل إعداد صرف المكافأت   ';        $data['metakeyword'] = 'تعديل إعداد صرف المكافأت     ';        $data['metadiscription'] = 'تعديل إعداد صرف المكافأت       ';        $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/add_family_cashing';        $this->load->view('admin_index', $data);    }    //=======================================================    public function DeleteCashingDetials()    {        $id_details = $this->input->post('id_details');        $this->Model_mokafat_cashing->delete_sarf_detals_id($id_details);    }    //=======================================================    public function UpdatePresence($id)    {        if ($this->input->post('ADD') == "ADD") {            $this->Model_mokafat_cashing->update_presence($id);            if (isset($_POST['session_num2'])) {                $session_id = "show_session" . $_POST['session_num2'];                if ($_POST[$session_id] == 1) {                    $this->Model_mokafat_cashing->update_session($_POST['session_num2']);                }            }            $this->messages('success', 'تم حفظ رقم المحضر  ');            redirect('FamilyCashing', 'refresh');        }    }    public function saad()    {        $this->load->model("familys_models/Register");        $data_load['data_table'] = $this->Register->select_where_cashing(array(), "");        $this->test($data_load);    }    /**     *  ================================================================================================================     *     *  ================================================================================================================     *     *  ================================================================================================================     */    public function add_new_sarf($sarf_num)    {        $data['row'] = $this->Model_mokafat_cashing->get_byan_by_id($sarf_num);        $data['details'] = $this->Model_mokafat_cashing->get_byan_sarf_details($sarf_num);        redirect('family_controllers/FamilyCashing', 'refresh');    }    /**********************/    public function download_sarf($file)    { //  FamilyCashing/downloads/        $this->load->helper('download');        $name = $file;        $data = file_get_contents('./uploads/files/sarf_attaches/' . $file);        force_download($name, $data);    }    public function read_all_file($file_name)    {        $this->load->helper('file');        // $file_name=$this->uri->segment(3);        $file_path = 'uploads/files/' . $file_name;        header('Content-Type: application/pdf');        header('Content-Discription:inline; filename="' . $file_name . '"');        header('Content-Transfer-Encoding: binary');        header('Accept-Ranges:bytes');        header('Content-Length: ' . filesize($file_path));        readfile($file_path);    }    public function downloads_all($file)    { //  md/all_glasat/All_glasat/downloads        $this->load->helper('download');        $name = $file;        $data = file_get_contents('./uploads/files' . $file);        force_download($name, $data);    }    /**********************************************************************************************************/    public function add_bnod_help() // human_resources/employee_forms/MokafatCashing/add_bnod_help    {        $this->load->model('human_resources_model/exchange_models/Bnod_help_settings');        $this->load->model('finance_accounting_model/dalel/Dalel_model');        if ($this->input->post('add')) {            $this->Bnod_help_settings->add_data('socity_branch');            $this->messages('success', "تم الاضافه بنجاح");            redirect('human_resources/employee_forms/MokafatCashing/add_bnod_help', 'refresh');        }        $data['records'] = $this->Bnod_help_settings->get_data_branch('bnod_help');        $records = $this->Dalel_model->buildTree(array('id!=' => 0));        $data['tree'] = $this->buildTree($records);        $data['titles'] = "اضافه  بنود الصرف";        $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/exchange_views/bnod_help/add_bnod';        $this->load->view('admin_index', $data);    }    public function delete_from_table($id)    {        $this->load->model('human_resources_model/exchange_models/Bnod_help_settings');        $this->Bnod_help_settings->delete_where_id($id);        redirect('human_resources/employee_forms/MokafatCashing/add_bnod_help', 'refresh');    }    public function update_bnod_help($id)    {        $this->load->model('human_resources_model/exchange_models/Bnod_help_settings');        $data['row'] = $this->Bnod_help_settings->get_where_id($id);        if ($this->input->post('add')) {            //     print_r($_POST);            //  die();            $this->Bnod_help_settings->update_by_id($id);            redirect('human_resources/employee_forms/MokafatCashing/add_bnod_help', 'refresh');        }        $data['titles'] = "تعديل  بنود الصرف";        $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/exchange_views/bnod_help/add_bnod';        $this->load->view('admin_index', $data);    }    public function addBnodHelpHesab($id) // human_resources/employee_forms/MokafatCashing/addBnodHelpHesab    {        $this->load->model('familys_models/exchange_models/Bnod_help_settings');        if ($this->input->post('save')) {            $this->Bnod_help_settings->addBnodHelpHesab($id);            $this->messages('success', "تم الاضافه بنجاح");            redirect('human_resources/employee_forms/MokafatCashing/add_bnod_help', 'refresh');        }    }    public function buildTree($elements, $parent = 0)    {        $branch = array();        foreach ($elements as $element) {            if ($element->parent == $parent) {                $children = $this->buildTree($elements, $element->id);                if ($children) {                    $element->subs = $children;                }                $branch[$element->id] = $element;            }        }        return $branch;    }    public function update_amin_manager($id)    {        $this->Model_mokafat_cashing->update_amin_manager($id);        redirect('human_resources/employee_forms/MokafatCashing/allSarf', 'refresh');    }    public function add_sarf_file($sarf_num)    {        if ($this->input->post('ADD')) {            $file = $this->upload_file('file_downloded');            $this->Model_mokafat_cashing->insert_file($file, $sarf_num);            redirect('human_resources/employee_forms/MokafatCashing/allSarf');        }    }    public function download($file)    {        $this->load->helper('download');        $name = $file;        $data = file_get_contents('./uploads/files/' . $file);        force_download($name, $data);        redirect('human_resources/employee_forms/MokafatCashing/allSarf', 'refresh');    }    public function read_file($file_name)    {        $this->load->helper('file');        $file_path = 'uploads/files/' . $file_name;        header('Content-Type: application/pdf');        header('Content-Discription:inline; filename="' . $file_name . '"');        header('Content-Transfer-Encoding: binary');        header('Accept-Ranges:bytes');        header('Content-Length: ' . filesize($file_path));        readfile($file_path);    }    function exportBankCheat_emp($id)    {        $this->load->helper('download');        // $this->load->model('familys_models/exchange_models/Sarf_model');        //$file =BASEPATH."/../"."asisst/exports/".time().".txt";        $file = BASEPATH . "/../" . "asisst/exports/template.txt";        $fileencoded = iconv("UTF-8", "cp1256//TRANSLIT", $file);        $bankid = $this->db->select("mainBank")->from("main_data")->get()->row();        $staff = $this->Model_mokafat_cashing->cheetDetailes_emp($id);        $sarf = $this->Model_mokafat_cashing->getById_emp($id);        $bnod_help = $this->Model_mokafat_cashing->getBand_help_name($sarf['bnod_help_fk']);        // echo $bnod_help['bnod_help_fk'];        //  echo $bnod_help;        // $this->test($sarf);        $dueDate = date("Ymd", $sarf["due_date"]);        $cashdate = date("Ymd", $sarf["cashing_date"]);        $total = str_pad(number_format((float)$sarf["total_value"], 2, '', ''), 15, '0', STR_PAD_LEFT);        $countofstaff = str_pad(sizeof($staff), 8, '0', STR_PAD_LEFT);        //$this->test($countofstaff);        $bank = str_pad($bankid->mainBank, 15, '0', STR_PAD_LEFT);        $head = $dueDate . $cashdate . $total . $countofstaff . $bank;        //  file_put_contents($file, "000000000000"."G".$head."                                                                   I"."\r\n", FILE_APPEND);        $str = "000000000000" . "G" . $head . "                                                                   I" . "\r\n";        $filedata = fopen($fileencoded, 'w+');        fwrite($filedata, $str);        fclose($filedata);        foreach ($staff as $st) {            $id = str_pad($st->emp_code, 12, '0', STR_PAD_LEFT);            $bankcode = $st->bank_code;            $bankaccount = str_pad($st->bank_account_num, 24, ' ', STR_PAD_LEFT);            $name = mb_str_pad($st->bank_responsible_name, 50, " ");            $nameencoded = iconv('UTF-8', 'WINDOWS-1256', $name);            $salary = str_pad(number_format((float)$st->value, 2, '', ''), 15, '0', STR_PAD_LEFT);            $nationalid = str_pad($st->bank_responsible_national_num, 15, '0', STR_PAD_LEFT);            $body = $id . $bankcode . $bankaccount . $nameencoded . $salary . $nationalid . "0000";            $myfile = fopen($fileencoded, "a") or die("Unable to open file!");            $txt = $body . "           ";            fwrite($myfile, $txt . "\r\n");            fclose($myfile);        }        $data = file_get_contents($fileencoded); // Read the file's contents        $type = 0;        if ($sarf["bnod_help_fk"] >= 1) {            $type = "Family";        } else {            $type = "Employee";        }        $sarf_num = $sarf["sarf_num"];        // $name = $bnod_help.date("MY").$type.$sarf_num.".txt";        //$name = $bnod_help.$type.date("MY").$sarf_num.".txt";        $name = $bnod_help . $sarf_num . date("MY") . ".txt";        force_download($name, $data);        unlink($file);    }  /*  public  function delete_mokfaat($sarf_num){        $this->Model_mokafat_cashing->delete_mokfaat('hr_mokafat_details', array('sarf_num_fk'=>$sarf_num));        $this->Model_mokafat_cashing->delete_mokfaat('hr_mokafat', array('sarf_num'=>$sarf_num));        $this->messages('success', "تم الحذف بنجاح");        redirect('human_resources/employee_forms/MokafatCashing', 'refresh');    }*/    //////////////        	 public  function delete_mokfaat($mokafa_rkm){        $this->Model_mokafat_cashing->delete_mokfaat('hr_mokafat_details', array('mokafa_rkm_fk'=>$mokafa_rkm));        $this->Model_mokafat_cashing->delete_mokfaat('hr_mokafat', array('mokafa_rkm'=>$mokafa_rkm));        $this->messages('success', "تم الحذف بنجاح");        redirect('human_resources/employee_forms/MokafatCashing', 'refresh');    }    public function get_emp_data(){}public function all_Mokafat_month_report(){    $data['records'] = $this->Model_mokafat_cashing->select_mokafat_data();    //$data['data'] = $this->Model_mokafat_cashing->select_month_data_by_day();    /*echo'<pre>';    print_r( $data['records']);    echo'</pre>';    die;*/    $data['title'] = 'تقرير بمكافأت الموظفين خلال الشهر';    $data['metakeyword'] = 'تقرير بمكافأت الموظفين خلال الشهر';    $data['metadiscription'] = 'تقرير بمكافأت الموظفين خلال الشهر';    $data['subview'] = 'admin/Human_resources/employee_forms/mokafat_cashing_views/all_Mokafat_month_report';    $this->load->view('admin_index', $data);}}// END CLASS